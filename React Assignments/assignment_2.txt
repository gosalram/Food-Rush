NPM:
  	npm is package manager for javascript maintained by microsoft's npm, Inc.
	It is the default package manager for the javascript run time environment Node.js.
	It is the place where all packages are hosted where developers can find build and manage packages to build large scale applications.

- What is `Parcel/Webpack`? Why do we need it?
	Parcel is a web application bundler[ It simplifies the deployment process and helps improve the performance of web applications.] which is used to compress, unify ,cache our html,css,js files which is used to build our application before sending it to production ready app.
	It has so many features like HMR ( hot module replacment ) which improve developer experience by automatically updating the changes made without refreshing the page .
	we need it to optimise our web apps ,use different feature in to our project ,use various dependencies and manages it effortlessely.
- What is `.parcel-cache`
	parcel- cache is created automatically when the app is hosted in local server for faster execution for next operation of app.
	`.parcel-cache` is a directory generated by the Parcel bundler, serving as a cache for storing intermediate build results. It enhances the development workflow by speeding up subsequent builds and optimizing resource usage
What is `npx` ?
	npx stands for Node Package eXecute which is a NPM package runner used for executing the package without installing them locally .
What is difference between `dependencies` vs `devDependencies`
	dependencies are the libraries that a project used to function the app effectively for both development phase and production phase
	devDependencies serves only for the development phase only .it can be seen seperately in the package.json file as a object.
- What is Tree Shaking
	it is the context to describe the removal of dead code.
	It relies on the import and export statements to detect if code modules are exported and imported for use between JavaScript files.
	In modern JavaScript applications, we use module bundlers (e.g., webpack or Rollup) to automatically remove dead code when bundling multiple JavaScript files into single files. This is important for preparing code that is production ready, for example with clean structures and minimal file size.
- What is Hot Module Replacement?
	Hot Module Replacement (HMR) improves the development experience by automatically updating modules in the browser at runtime without needing a whole page refresh.
	 This means that application state can be retained as you change small things. Parcel's HMR implementation supports both JavaScript and CSS assets.
- List down your favourite 5 superpowers of Parcel and describe any 3 of them in your
own words.
	1.create a development build
	2. Create a Local Server
	3. HMR hot module Replacement
	4. File watchig algorithm
	5. Consistent Hashing
	6 Bundling and Minification


File watchig algorithm
	ParcelJS employs a highly efficient file-watching algorithm written in C++, which ensures lightning-fast recompilation of changed files. This algorithm minimizes the time required for rebuilding the project, making development even more efficient.


Bundling and Minification	
	ParcelJS excels at bundling JavaScript, CSS, and other assets. It automatically analyzes your project’s dependencies and generates optimized bundles. It can handle a wide range of file types out of the box, making it extremely versatile.


Consistent Hashing Algorithm
	ParcelJS utilizes a consistent hashing algorithm to generate unique filenames for cache busting. This ensures that whenever you make changes to your code, the browser fetches the latest version from the server, eliminating the need for users to manually clear their browser cache.

What is `.gitignore`? What should we add and not add into it?
	it is the txt file used by GIT to untrack files intentionally

	.gitignore is a text file used by Git to specify intentionally untracked files that Git should ignore. These are typically files that you don't want to be included in version control or tracked by Git.

	we should add files which we wont able to regenerate such us html,css,js,package.json,packagelock.json 
	we should not add files like node modules ,dependencies etc
● - What is the difference between `package.json` and `package-lock.json`
	package.json is a configuration for npm and it is used to track the dependencies used in the project and its meta data
  	package.json: This file is primarily used for managing and documenting metadata about the project, including its name, version, author, dependencies, scripts, and other configuration details. It acts as a manifest for the project.
`	
	package lock.json keep track of the exact version of all packages and its dependencies
	package-lock.json: This file is generated and updated automatically by npm when installing or updating packages. It is used to lock the exact versions of dependencies installed in the project, ensuring reproducibility and consistent installations across different environments.

- Why should I not modify `package-lock.json`?
	package-lock.json is a machine-generated file that should be managed automatically by npm or yarn. Modifying it manually can introduce risks, such as dependency mismatches, non-deterministic builds, collaboration difficulties, tooling compatibility issues, and security vulnerabilities
● - What is `node_modules` ? Is it a good idea to push that on git?
	
	"node_modules" is a directory commonly found in projects that use Node.js for development. When you install packages or dependencies using npm (Node Package Manager) or yarn, they are typically placed in this directory.
 	These packages contain the code and resources needed for your project to function properly. The "node_modules" directory can become quite large, especially for projects with many dependencies, and it's typically excluded from version control systems like Git to prevent bloating the repository size. 
What is the `dist` folder
	The "dist" folder, short for "distribution," typically contains files that are ready for deployment or distribution. In software development, particularly in web development or when building applications, the "dist" folder often holds optimized, compiled, or bundled versions of the source code. These optimized versions are typically intended for production use rather than development.
 What is `browserlists`
	browserslist is a configuration file that determines which browsers your project should support. It is used by many tools, including Autoprefixer, Babel, and Stylelint, to automatically add vendor prefixes and polyfills to your CSS and JavaScript code
