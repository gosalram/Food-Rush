1. **Emmet**: Emmet is a toolkit for web developers that greatly improves HTML and CSS workflow. It allows developers to write HTML and CSS code faster using abbreviations and shortcuts. Emmet can expand these abbreviations into complete code snippets, saving developers time and effort.

2. **Difference between a Library and Framework**:
    - **Library**: A library is a collection of pre-written code that can be used to perform specific tasks. It typically consists of functions and modules that you can use in your own code to extend functionality or simplify tasks. Libraries do not dictate the overall structure or flow of your application.
    - **Framework**: A framework, on the other hand, provides a structure for building applications. It often includes a set of rules, conventions, and predefined components that guide the development process. Frameworks impose a certain architecture on your application and dictate how it should be organized. Unlike libraries, you typically write code that fits into the framework's architecture.

3. **CDN (Content Delivery Network)**: A CDN is a network of distributed servers that deliver web content to users based on their geographic location. It works by caching static content like images, scripts, stylesheets, and other files on servers located closer to the user. CDNs help improve website performance by reducing latency and bandwidth usage. Developers use CDNs to deliver content quickly and reliably to users worldwide.

4. **Why React is known as React**: React is called React because it's designed around the concept of reactive programming. In React, the UI reacts to changes in data, updating components as needed to reflect the current state of the application. The name "React" reflects this reactive approach to building user interfaces.

5. **crossorigin in script tag**: The `crossorigin` attribute in a script tag specifies how the browser should handle requests to load scripts from a different origin (i.e., domain) than the current webpage. It is typically used when loading scripts from a CDN or another domain. Possible values for `crossorigin` include "anonymous" and "use-credentials", which determine how the browser sends authentication information, if any, when making requests for the script.

6. **Difference between React and ReactDOM**:
    - **React**: React is a JavaScript library for building user interfaces. It provides the core functionality for defining components, managing component state, and rendering UI elements.
    - **ReactDOM**: ReactDOM is a package that provides DOM-specific methods for React. It is used to interact with the DOM, such as rendering React components into the DOM, updating the DOM in response to changes in component state, and handling events.

7. **Difference between react.development.js and react.production.js files via CDN**:
    - **react.development.js**: This file contains the development version of React, which includes additional warnings and debugging information to aid developers during development and debugging stages. It is larger in size compared to the production version.
    - **react.production.js**: This file contains the production version of React, which is optimized for performance and has all development warnings and debugging information stripped out. It is smaller in size compared to the development version and is suitable for deployment in production environments to minimize load times and improve performance.
8. Async and Defer attributes:
`async` and `defer` are attributes that can be added to `<script>` tags in HTML to control the way scripts are loaded and executed.

1. **async**:
   - When you include the `async` attribute in a `<script>` tag, it tells the browser to load the script asynchronously while continuing to parse the HTML document.
   - The script will be downloaded asynchronously, which means it won't block the parsing of the HTML document.
   - Once the script is downloaded, it will execute immediately, potentially before the HTML document is fully parsed.
   - This can be useful for non-essential scripts that can be executed independently of the HTML document, such as analytics or tracking scripts.
   - Note that the order of execution of async scripts is not guaranteed. If script order is important, consider using `defer` instead.

2. **defer**:
   - When you include the `defer` attribute in a `<script>` tag, it tells the browser to defer the execution of the script until after the HTML document has been fully parsed.
   - The script will be downloaded in the background while parsing the HTML document.
   - Once the HTML document is parsed, deferred scripts will be executed in the order they appear in the document.
   - This can be useful for scripts that need to manipulate the DOM or interact with elements defined in the HTML document, ensuring that they are executed after the document is fully loaded.
   - Unlike scripts with the `async` attribute, deferred scripts are executed in the order they appear in the document, preserving dependencies between scripts.

In summary, `async` is used when the script can be executed independently and doesn't rely on the DOM being fully loaded, while `defer` is used when the script needs to wait for the DOM to be fully parsed before executing.